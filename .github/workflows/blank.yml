# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
          
      - uses: FedericoCarboni/setup-ffmpeg@v3
        id: setup-ffmpeg
        with:
          # A specific version to download, may also be "release" or a specific version
          # like "6.1.0". At the moment semver specifiers (i.e. >=6.1.0) are supported
          # only on Windows, on other platforms they are allowed but version is matched
          # exactly regardless.
          ffmpeg-version: release
          # Target architecture of the ffmpeg executable to install. Defaults to the
          # system architecture. Only x64 and arm64 are supported (arm64 only on Linux).
          architecture: ''
          # Linking type of the binaries. Use "shared" to download shared binaries and 
          # "static" for statically linked ones. Shared builds are currently only available
          # for windows releases. Defaults to "static"
          linking-type: static
          # As of version 3 of this action, builds are no longer downloaded from GitHub
          # except on Windows: https://github.com/GyanD/codexffmpeg/releases.
          github-token: ${{ github.server_url == 'https://github.com' && github.token || '' }}

      - uses: MinoruSekine/setup-scoop@v3

      - name: Update and install aria2
        run: |
          scoop install aria2
  
      - name: Test download file
        run: |
          aria2c https://wot.djgappa.com/storage/torrents/1.23/World_of_Tanks_1.23.01.00.00_AS_0338_HD.7z.torrent \
          --listen-port=51413 --dht-listen-port=51413 --enable-dht=true --enable-dht6=false --dht-file-path=dht.dat \
          --dht-file-path6=dht6.dat --dht-entry-point=dht.transmissionbt.com:6881 --dht-entry-point6=dht.transmissionbt.com:6881 \
          --bt-enable-lpd=true --enable-peer-exchange=true --bt-max-peers=128 --bt-request-peer-speed-limit=10M --max-overall-upload-limit=2M \
          --max-upload-limit=0 --seed-ratio=1.0 --seed-time=0 --bt-hash-check-seed=true --bt-seed-unverified=false --bt-tracker-connect-timeout=10 \
          --bt-tracker-timeout=10 --bt-prioritize-piece=head=32M,tail=32M --rpc-save-upload-metadata=true --follow-torrent=true --pause-metadata=false \
          --bt-save-metadata=true --bt-load-saved-metadata=true --bt-remove-unselected-file=true --bt-force-encryption=true --bt-detach-seed-only=true --peer-agent="Transmission 2.94" \
          --peer-id-prefix="-TR2940-" --user-agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36 Edg/87.0.664.57"

      - name: Record screen using ffmpeg
        run: |
          ffmpeg -t 10 -f gdigrab -framerate 30 -i desktop output.mkv

      - uses: actions/upload-artifact@v4
        with:
          name: Screen-recording
          path: output.mkv


